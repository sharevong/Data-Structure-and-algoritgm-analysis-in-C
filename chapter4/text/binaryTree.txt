1、二叉树

二叉树中的每个节点最多有两个儿子节点
平均深度为根号N 最差情况时的深度为N-1

N个节点的二叉树需要N+1个null指针
因为N个节点会产生2N个指针(左右指针)，
而N个节点只能产生N-1条边(每个节点都有一条边连接它的父节点，根节点除外)
因此会产生 2N-(N-1) = N+1 个 null指针

2、二叉树的节点声明

typedef struct TreeNode* PtrToNode ;
typedef struct PtrToNode Tree ;
struct TreeNode
{
   ElementType Element ;  // 节点数据
   Tree Left ;   // 左子树
   Tree Right ;  // 右子树
} ;

3、使用后缀表达式构造表达式树

中缀表达式 ( a + b ) * ( c * ( d + e ) )
后缀表达式 a b + c d e + * *     中缀表达式转后缀表达式使用栈，参考第三章

算法：
当读入操作数如a b时，构造单节点树插入栈中  
                   --->  产生a b两个单节点树
当读入操作符如+时，弹出栈中的两个树，作为操作符树的左右子树，新树入栈
                   --->  弹出a b两个单节点树，+ -> a 树入栈
                                                -> b 
重复以上两个步骤直到字符串结束

最后生成的表达式树如下

* -> + -> a
       -> b
  -> * -> c
       -> + -> d
            -> e
